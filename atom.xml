<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sacoku&#39;s github.io</title>
  
  <subtitle>Develop History</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sacoku.github.io/"/>
  <updated>2018-07-13T01:22:09.714Z</updated>
  <id>https://sacoku.github.io/</id>
  
  <author>
    <name>sacoku</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GIT CRLF 문제</title>
    <link href="https://sacoku.github.io/2018/07/13/git-crlf/"/>
    <id>https://sacoku.github.io/2018/07/13/git-crlf/</id>
    <published>2018-07-12T23:42:05.000Z</published>
    <updated>2018-07-13T01:22:09.714Z</updated>
    
    <content type="html"><![CDATA[<p>Git을 사용하다 보면, Client 환경이 Windows/Linux 등 다른 환경일 경우가 있다.<br>이 경우 서로 다른 line ending으로 인해서 수정이 되지 않았음에도 수정된 것으로 인식하여 협업 시 어려움이 발생하는 경우가 있다.<br>이러한 문제를 해결하기 위해서는 git의 아래의 설정이 필요하다.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global core.autocrlf input</span><br><span class="line">$ git config --global core.eol lf</span><br></pre></td></tr></table></figure></p><ul><li>core.autocrlf</li></ul><table><thead><tr><th>options</th><th><center>value</center></th></tr></thead><tbody><tr><td>false</td><td>기본설정. 파일에 CRLF 를 썼든 LF 를 썼든 git 은 상관하지 않고 파일 그대로 checkin, checkout 한다. 이 설정은 line ending 이 다른 OS 에서는 text file 이 변경되었다고 나오므로 위에서 언급한 여러 가지 문제가 발생할 수 있다</td></tr><tr><td>true</td><td>text file을 object database 에 넣기전에 CRLF 를 LF 로 변경한다</td></tr><tr><td>input</td><td>LF를 line ending 으로 사용한다.</td></tr></tbody></table><ul><li>core.eol</li></ul><table><thead><tr><th>options</th><th><center>value</center></th></tr></thead><tbody><tr><td>native</td><td>기본 설정. 시스템에서 line ending 을 처리하는 방법에 따른다. windows에서는 CRLF 를 사용하고 Linux, OS X 는 LF 만 사용한다.</td></tr><tr><td>crlf</td><td>CRLF 를 line ending 으로 사용한다.</td></tr><tr><td>lf</td><td>LF를 line ending 으로 사용한다.</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Git을 사용하다 보면, Client 환경이 Windows/Linux 등 다른 환경일 경우가 있다.&lt;br&gt;이 경우 서로 다른 line ending으로 인해서 수정이 되지 않았음에도 수정된 것으로 인식하여 협업 시 어려움이 발생하는 경우가 있다.&lt;
      
    
    </summary>
    
      <category term="DevOps" scheme="https://sacoku.github.io/categories/DevOps/"/>
    
      <category term="Git" scheme="https://sacoku.github.io/categories/DevOps/Git/"/>
    
    
      <category term="Git" scheme="https://sacoku.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>2018-07-12</title>
    <link href="https://sacoku.github.io/2018/07/12/2018-07-12/"/>
    <id>https://sacoku.github.io/2018/07/12/2018-07-12/</id>
    <published>2018-07-12T07:49:27.000Z</published>
    <updated>2018-07-13T01:23:05.356Z</updated>
    
    <content type="html"><![CDATA[<p>처음으로 Blog용 페이지 만듬<br><img src="/images/sons.jpg" alt="아들들"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;처음으로 Blog용 페이지 만듬&lt;br&gt;&lt;img src=&quot;/images/sons.jpg&quot; alt=&quot;아들들&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="Blog" scheme="https://sacoku.github.io/categories/Blog/"/>
    
      <category term="2018" scheme="https://sacoku.github.io/categories/Blog/2018/"/>
    
    
      <category term="Sons" scheme="https://sacoku.github.io/tags/Sons/"/>
    
  </entry>
  
  <entry>
    <title>Docker Build &amp; Run</title>
    <link href="https://sacoku.github.io/2018/07/12/docker-build-run/"/>
    <id>https://sacoku.github.io/2018/07/12/docker-build-run/</id>
    <published>2018-07-12T07:24:21.000Z</published>
    <updated>2018-07-13T01:22:45.874Z</updated>
    
    <content type="html"><![CDATA[<p>Docker로 Image를 생성해서 Docker-compose로 실행하는 방법에 대해서 서술해<br>보자 한다.</p><h2 id="Docker-Build-Image-만들기"><a href="#Docker-Build-Image-만들기" class="headerlink" title="Docker Build Image 만들기"></a>Docker Build Image 만들기</h2><p>아래는 Dockerfile 의 기본적인 작성 예이다.<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">FROM</span> <span class="attr">openjdk:8u171-jdk-alpine3.7</span>  <span class="comment">#Base Image</span></span><br><span class="line"><span class="string">MAINTAINER</span> <span class="string">Sunghyun</span> <span class="string">Kim(sacoku@metabuild.co.kr)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Environment Variable</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">KRF_HOME=/usr/local/apache-karaf</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">KFA_HOME=/usr/local/kafka</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Apk Update</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">apk</span> <span class="bullet">--update</span> <span class="string">upgrade</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">apk</span> <span class="bullet">--update</span> <span class="string">add</span> <span class="string">sudo</span> <span class="string">bash</span> <span class="string">jq</span> <span class="string">curl</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">rm</span> <span class="bullet">-rf</span> <span class="string">/var/cache/apk/*</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## karaf install</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">wget</span> <span class="attr">http://apache.tt.co.kr/karaf/4.2.0/apache-karaf-4.2.0.tar.gz</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">tar</span> <span class="string">xvzf</span> <span class="string">apache-karaf-4.2.0.tar.gz</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">mv</span> <span class="string">apache-karaf-4.2.0</span> <span class="string">/usr/local</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">mkdir</span> <span class="bullet">-p</span> <span class="string">/usr/local/apache-karaf-4.2.0/config/radar</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">mkdir</span> <span class="bullet">-p</span> <span class="string">/usr/local/apache-karaf-4.2.0/config/vsl</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">rm</span> <span class="string">apache-karaf-4.2.0.tar.gz</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">ln</span> <span class="bullet">-s</span> <span class="string">/usr/local/apache-karaf-4.2.0</span> <span class="string">/usr/local/apache-karaf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## kafka install</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">wget</span> <span class="attr">http://apache.tt.co.kr/kafka/1.1.0/kafka_2.12-1.1.0.tgz</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">tar</span> <span class="string">xvzf</span> <span class="string">kafka_2.12-1.1.0.tgz</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">mv</span> <span class="string">kafka_2.12-1.1.0</span> <span class="string">/usr/local</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">rm</span> <span class="string">kafka_2.12-1.1.0.tgz</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">ln</span> <span class="bullet">-s</span> <span class="string">/usr/local/kafka_2.12-1.1.0</span> <span class="string">/usr/local/kafka</span></span><br><span class="line"></span><br><span class="line"><span class="string">COPY</span> <span class="string">configs/bundle/*</span> <span class="string">$KRF_HOME/deploy/</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">configs/config/radar</span> <span class="string">$KRF_HOME/config/radar</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">configs/config/vsl</span> <span class="string">$KRF_HOME/config/vsl</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">configs/karaf.sh</span> <span class="string">/root</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">configs/kafka.sh</span> <span class="string">/root</span></span><br><span class="line"></span><br><span class="line"><span class="string">CMD</span> <span class="string">[</span> <span class="string">"sh"</span><span class="string">,</span> <span class="string">"-c"</span><span class="string">,</span> <span class="string">"/root/karaf.sh start; /root/kafka.sh start"</span> <span class="string">]</span></span><br><span class="line"></span><br><span class="line"><span class="string">EXPOSE</span> <span class="number">1099</span> <span class="number">8101</span> <span class="number">44444</span> <span class="number">8181</span></span><br></pre></td></tr></table></figure></p><h2 id="Docker-build"><a href="#Docker-build" class="headerlink" title="Docker build"></a>Docker build</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker build -it metabuild/vsls-karaf .</span><br></pre></td></tr></table></figure><h2 id="Docker-Compose-스크립트"><a href="#Docker-Compose-스크립트" class="headerlink" title="Docker Compose 스크립트"></a>Docker Compose 스크립트</h2><p>아래는 docker-compose.yml 파일의 container 간 Link를 사용하는 기본적인 사용 예이다.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  vsls-server:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">metabuild/vsls-karaf</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">vsls-karaf</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">vsls-server</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">vsls-net</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">2181</span><span class="string">:2181</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">9092</span><span class="string">:9092</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">8181</span><span class="string">:8181</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">6500</span><span class="string">:6500</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      ADVERTISED_HOST:</span> <span class="string">vsls-server</span></span><br><span class="line"><span class="attr">      ADVERTISED_PORT:</span> <span class="number">9092</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  vsls-web:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">metabuild/vsls-web</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">vsls-web</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">81</span><span class="string">:81</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">8082</span><span class="string">:8082</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">9000</span><span class="string">:9000</span></span><br><span class="line"><span class="attr">    links:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">vsls-server</span> <span class="comment"># vsls-server와 link되어서 </span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  vsls-net:</span></span><br><span class="line"><span class="attr">    driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure><h2 id="Docker-실행"><a href="#Docker-실행" class="headerlink" title="Docker 실행"></a>Docker 실행</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose up -d</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Docker로 Image를 생성해서 Docker-compose로 실행하는 방법에 대해서 서술해&lt;br&gt;보자 한다.&lt;/p&gt;
&lt;h2 id=&quot;Docker-Build-Image-만들기&quot;&gt;&lt;a href=&quot;#Docker-Build-Image-만들기&quot; clas
      
    
    </summary>
    
      <category term="DevOps" scheme="https://sacoku.github.io/categories/DevOps/"/>
    
      <category term="Docker" scheme="https://sacoku.github.io/categories/DevOps/Docker/"/>
    
    
      <category term="Docker" scheme="https://sacoku.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker Summary</title>
    <link href="https://sacoku.github.io/2018/07/12/docker-summary/"/>
    <id>https://sacoku.github.io/2018/07/12/docker-summary/</id>
    <published>2018-07-12T03:37:37.000Z</published>
    <updated>2018-07-13T00:30:13.472Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>Dockerfile build<br>Dockerfile이 있는 디렉토리에서 아래의 명령어를 실행</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker build -t [tag] .</span><br></pre></td></tr></table></figure></li><li><p>Docker 실행</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -p 8080:8081 -p 1234:1111 -v /var/tmp:/data [image name]</span><br></pre></td></tr></table></figure></li><li><p>Docker container List 확인</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker ps -a</span><br></pre></td></tr></table></figure></li><li><p>Docker image List 확인</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker images</span><br></pre></td></tr></table></figure></li><li><p>Docker image 삭제</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker rmi [image id]</span><br></pre></td></tr></table></figure></li><li><p>Docker Container 삭제</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker rm [Container ID]</span><br></pre></td></tr></table></figure></li><li><p>Docker Container  Start/Stop</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker start/stop [Container ID]</span><br></pre></td></tr></table></figure></li><li><p>Docker Volume 생성 &amp; 실행</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker volume create --name data</span><br><span class="line">$ docker run --name=test -p 10022:22 -v data:/data [image]</span><br></pre></td></tr></table></figure></li><li><p>Docker Container 명령어 싫행</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -it [Container ID] [Command]</span><br></pre></td></tr></table></figure></li><li><p>Container를 Image로 만들기</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker commit [options] &lt;container name&gt; [image name[:tag name]]</span><br><span class="line"># example</span><br><span class="line">$ docker commit -a &quot;catchup&quot; -m &quot;www.leafcats.com&quot; nginx_base catchup/myapp</span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td>- a, –author=””</td><td>생성자 정보</td></tr><tr><td>-m, –message=””</td><td>이미지 메시지</td></tr><tr><td>-p, –pause=true/false</td><td>이미지를 생성할 때 컨테이너를 중지(stop) 한 뒤 commit 여부</td></tr></tbody></table><h3 id="Docker-Image-import-export"><a href="#Docker-Image-import-export" class="headerlink" title="Docker Image import/export"></a>Docker Image import/export</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># export</span></span><br><span class="line">$ docker save image_name &gt; ./backup.tar</span><br><span class="line"><span class="comment"># import</span></span><br><span class="line">$ docker load -i ./backup.tar</span><br></pre></td></tr></table></figure><h3 id="Docker-Container-import-export"><a href="#Docker-Container-import-export" class="headerlink" title="Docker Container import/export"></a>Docker Container import/export</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># export</span></span><br><span class="line">$ docker <span class="built_in">export</span> [container_name] &gt; ./backup.tar</span><br><span class="line"><span class="comment"># import</span></span><br><span class="line">$ docker import ./backup.tar</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;Dockerfile build&lt;br&gt;Dockerfile이 있는 디렉토리에서 아래의 명령어를 실행&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa
      
    
    </summary>
    
      <category term="DevOps" scheme="https://sacoku.github.io/categories/DevOps/"/>
    
      <category term="Docker" scheme="https://sacoku.github.io/categories/DevOps/Docker/"/>
    
    
      <category term="Docker" scheme="https://sacoku.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>How to Hadoop HDFS NFS</title>
    <link href="https://sacoku.github.io/2018/07/12/how-to-hadoop-hdfs-nfs/"/>
    <id>https://sacoku.github.io/2018/07/12/how-to-hadoop-hdfs-nfs/</id>
    <published>2018-07-12T00:07:49.000Z</published>
    <updated>2018-07-13T01:21:52.876Z</updated>
    
    <content type="html"><![CDATA[<p>Apache Hadoop은 NFS Gateway를 지원 해준다. 근데, 공식 문서에서는 exports point를 직접 지정 하는 방법은 나와있지 않다.</p><h3 id="1-hdfs-site-xml-nfs-옵션-추가"><a href="#1-hdfs-site-xml-nfs-옵션-추가" class="headerlink" title="1. hdfs-site.xml nfs 옵션 추가"></a>1. hdfs-site.xml nfs 옵션 추가</h3><p>이 값은 hadoop 2.5.x 버전 이상에서만 존재함</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nano <span class="variable">$HADOOP_PREFIX</span>/etc/hadoop/hdfs-site.xml</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">......................................</span><br><span class="line">...........................................</span><br><span class="line">................................................</span><br><span class="line">    <span class="comment">&lt;!-- NFS v3 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.groups<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>nfs.exports.allowed.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>* rw<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>nfs.export.point<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/ruo91<span class="tag">&lt;/<span class="name">value</span>&gt;</span> <span class="comment">&lt;!-- HDFS상에 실제 존재해야 하는 디렉토리여야 함 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>Property</th><th>Description</th></tr></thead><tbody><tr><td>hadoop.proxyuser.[userid].groups</td><td>NFS를 마운트를 허용할 사용자</td></tr><tr><td>hadoop.proxyuser.[userid].hosts</td><td>이 옵션에 값을 *로 설정하면 모든 호스트들에게 NFS Gateway 허용</td></tr><tr><td>nfs.exports.allowed.hosts</td><td>NFS Client가 Mount시 허용할 Host와 권한을 지정할때 사용한다.</td></tr><tr><td>nfs.export.point</td><td>NFS의 exports point를 직접 지정할 수 있는 부분이다.</td></tr></tbody></table><h3 id="2-Data-Node-재시작"><a href="#2-Data-Node-재시작" class="headerlink" title="2. Data Node 재시작"></a>2. Data Node 재시작</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ stop-dfs.sh all &amp;&amp; start-dfs.sh</span><br></pre></td></tr></table></figure><h3 id="3-Hadoop-NFS-Gateway"><a href="#3-Hadoop-NFS-Gateway" class="headerlink" title="3. Hadoop NFS Gateway"></a>3. Hadoop NFS Gateway</h3><p>HostOS에 기존에 동작하고 있던 portmap, nfs 서비스를 사전에 모두 중지 해야한다.<br>(물론 사용하는 OS에 따라 서비스 중지법은 다르다.)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ service nfs stop &amp;&amp; service rpcbind</span><br></pre></td></tr></table></figure></p><p>Hadoop의 Portmap, NFS 서버를 실행하는 방법은 2가지가 있다.<br>첫번째는 hadoop-daemon.sh 스크립트를 사용하여 background에서 실행하는 방법.<br>두번째는 hdfs 명령어를 통해 foreground에서 실행하는 방법이 있다.</p><p>본인은 정상 Mount 되었는지 확인 하기 위해서 두번째 방법으로 실행 하겠다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hdfs portmap &amp;</span><br><span class="line">$ hdfs nfs3 &amp;</span><br></pre></td></tr></table></figure></p><h3 id="4-Test"><a href="#4-Test" class="headerlink" title="4. Test"></a>4. Test</h3><p>정상적으로 Mount 되었는지 확인하기 위해 HDFS에 디렉토리를 만들고, 임의로 생성한 파일을 복사하여 NFS Client에서 Mount 해볼 것이다.</p><ul><li>로그 생성 및 복사<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ hdfs dfs -mkdir -p /ruo91/logs</span><br><span class="line">$ <span class="keyword">for</span>((i=0; i&lt;10; i++)) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$&#123;i&#125;</span>; <span class="keyword">done</span> &gt; /tmp/test.log</span><br><span class="line">$ hdfs dfs -copyFromLocal /tmp/test.log /ruo91/logs/test.log</span><br><span class="line">$ hdfs dfs -ls -R /ruo91</span><br><span class="line"></span><br><span class="line">drwxr-xr-x   - root supergroup          0 2015-02-11 23:35 /ruo91/logs</span><br><span class="line">-rw-r--r--   1 root supergroup         20 2015-02-11 23:35 /ruo91/logs/test.log</span><br><span class="line">-rw-r--r--   1 root supergroup 1160435178 2015-02-11 22:24 /ruo91/logs/yongbok.net-access-logs.json</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>NFS Client Mount 테스트<br>exports point 확인</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ showmount -e</span><br><span class="line">Export list <span class="keyword">for</span> ruo91:</span><br><span class="line">/ruo91 *</span><br></pre></td></tr></table></figure></li><li><p>디렉토리 생성 및 mount</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir /hdfs-nfs3</span><br><span class="line">$ mount -t nfs -o vers=3,proto=tcp,nolock localhost:/ruo91 /hdfs-nfs3</span><br></pre></td></tr></table></figure></li><li><p>mount 디렉토리 확인</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ mount | grep hdfs</span><br><span class="line">localhost:/ruo91 on /hdfs-nfs3 <span class="built_in">type</span> nfs (rw,vers=3,proto=tcp,nolock,addr=127.0.0.1)</span><br><span class="line"></span><br><span class="line">$ ls -alR /hdfs-nfs3  </span><br><span class="line">root@ruo91:~<span class="comment"># ls -alR /hdfs-nfs3</span></span><br><span class="line"></span><br><span class="line">/hdfs-nfs3:</span><br><span class="line">total 5</span><br><span class="line">drwxr-xr-x  3 root 2584148964   96  2월 11 22:23 .</span><br><span class="line">drwxr-xr-x 27 root root       4096  2월 11 22:22 ..</span><br><span class="line">drwxr-xr-x  4 root 2584148964  128  2월 11 23:35 logs</span><br><span class="line"></span><br><span class="line">/hdfs-nfs3/logs:</span><br><span class="line">total 1133239</span><br><span class="line">drwxr-xr-x 4 root 2584148964        128  2월 11 23:35 .</span><br><span class="line">drwxr-xr-x 3 root 2584148964         96  2월 11 22:23 ..</span><br><span class="line">-rw-r--r-- 1 root 2584148964         20  2월 11 23:35 test.log</span><br><span class="line">-rw-r--r-- 1 root 2584148964 1160435178  2월 11 22:24 yongbok.net-access-logs.json</span><br></pre></td></tr></table></figure></li></ul><p>위와 같이 정상적으로 마운트가 되면 Hadoop NFS 서버에는 아래와 같은 INFO 메세지가 나오면 잘 된거다.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">15/02/11 23:42:16 INFO mount.RpcProgramMountd: Giving handle (fileId:16386) to client <span class="keyword">for</span> <span class="built_in">export</span> /ruo91</span><br></pre></td></tr></table></figure></p><ul><li><p>윈도우에서 접근시</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ mount -o anon \\10.1.2.221\user\root\data Z:</span><br><span class="line">명령을 완료했습니다.</span><br><span class="line"></span><br><span class="line">$ mount</span><br><span class="line">로컬    원격                                 속성</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">r:       \\10.1.2.221\user\root\data            UID=0, GID=0</span><br><span class="line">                                                rsize=1048576, wsize=1048576</span><br><span class="line">                                                mount=soft, timeout=0.8</span><br><span class="line">                                                retry=1, locking=no</span><br><span class="line">                                                fileaccess=755, lang=KSC5601</span><br><span class="line">                                                casesensitive=no</span><br><span class="line">                                                sec=sys</span><br></pre></td></tr></table></figure><p>anon:anonymouns default uid/gid가 -2로 설정 되어 있기 때문에 변경이 필요하다.<br>변경은 “HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\ClientForNFS\CurrentVersion\Default”에 아래의 값을 설정해야 한다.</p></li></ul><table><thead><tr><th>Name</th><th>Type</th><th>Data</th></tr></thead><tbody><tr><td>AnonymounsUid</td><td>REG_DWORD</td><td>0x00000000(0)</td></tr><tr><td>AnonymounsGid</td><td>REG_DWORD</td><td>0x00000000(0)</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Apache Hadoop은 NFS Gateway를 지원 해준다. 근데, 공식 문서에서는 exports point를 직접 지정 하는 방법은 나와있지 않다.&lt;/p&gt;
&lt;h3 id=&quot;1-hdfs-site-xml-nfs-옵션-추가&quot;&gt;&lt;a href=&quot;#1-
      
    
    </summary>
    
      <category term="Bigdata" scheme="https://sacoku.github.io/categories/Bigdata/"/>
    
      <category term="Hadoop" scheme="https://sacoku.github.io/categories/Bigdata/Hadoop/"/>
    
    
      <category term="Bigdata" scheme="https://sacoku.github.io/tags/Bigdata/"/>
    
      <category term="Hadoop" scheme="https://sacoku.github.io/tags/Hadoop/"/>
    
  </entry>
  
</feed>
